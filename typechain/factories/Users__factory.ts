/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Users, UsersInterface } from "../Users";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "voterAddress",
        type: "address",
      },
    ],
    name: "VoterRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Common.WorkflowStatus",
        name: "previousStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum Common.WorkflowStatus",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "WorkflowStatusChange",
    type: "event",
  },
  {
    inputs: [],
    name: "defaultWorkflowStatus",
    outputs: [
      {
        internalType: "enum Common.WorkflowStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "userAddProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "voteForFavoriteProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600460006101000a81548160ff0219169083600581111561002a57610029610129565b5b021790555034801561003b57600080fd5b5061005861004d61005d60201b60201c565b61006560201b60201c565b610158565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611220806101676000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638845ff4d1161005b5780638845ff4d146100d95780638da5cb5b146100f5578063c21bc90414610113578063f2fde38b146101315761007d565b8063013cf08b146100825780630bb28aa9146100b3578063715018a6146100cf575b600080fd5b61009c60048036038101906100979190610a5b565b61014d565b6040516100aa929190610b30565b60405180910390f35b6100cd60048036038101906100c89190610c95565b610209565b005b6100d76103f0565b005b6100f360048036038101906100ee9190610a5b565b610478565b005b6100fd61076f565b60405161010a9190610d1f565b60405180910390f35b61011b610798565b6040516101289190610db1565b60405180910390f35b61014b60048036038101906101469190610df8565b6107ab565b005b6002818154811061015d57600080fd5b906000526020600020906002020160009150905080600001805461018090610e54565b80601f01602080910402602001604051908101604052809291908181526020018280546101ac90610e54565b80156101f95780601f106101ce576101008083540402835291602001916101f9565b820191906000526020600020905b8154815290600101906020018083116101dc57829003601f168201915b5050505050908060010154905082565b60011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615151461029f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029690610ed1565b60405180910390fd5b60016040518060800160405280604f815260200161119c604f91398160058111156102cd576102cc610d3a565b5b600460009054906101000a900460ff1660058111156102ef576102ee610d3a565b5b148190610332576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103299190610ef1565b60405180910390fd5b506002604051806040016040528085815260200160008152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908051906020019061039092919061096e565b50602082015181600101555050600060016002805490506103b19190610f42565b90507f92e393e9b54e2f801d3ea4beb0c5e71a21cc34a5d34b77d0fb8a3aa1650dc18f816040516103e29190610f76565b60405180910390a150505050565b6103f86108a2565b73ffffffffffffffffffffffffffffffffffffffff1661041661076f565b73ffffffffffffffffffffffffffffffffffffffff161461046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046390610fdd565b60405180910390fd5b61047660006108aa565b565b60011515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615151461050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050590610ed1565b60405180910390fd5b60036040518060400160405280601c81526020017f5468657265206973206e6f20766f746520696e2070726f67726573730000000081525081600581111561055957610558610d3a565b5b600460009054906101000a900460ff16600581111561057b5761057a610d3a565b5b1481906105be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b59190610ef1565b60405180910390fd5b5060001515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16151514610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90611049565b60405180910390fd5b82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055506002838154811061070a57610709611069565b5b9060005260206000209060020201600101600081548092919061072c90611098565b91905055507f4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca433846040516107629291906110e0565b60405180910390a1505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900460ff1681565b6107b36108a2565b73ffffffffffffffffffffffffffffffffffffffff166107d161076f565b73ffffffffffffffffffffffffffffffffffffffff1614610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e90610fdd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088d9061117b565b60405180910390fd5b61089f816108aa565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805461097a90610e54565b90600052602060002090601f01602090048101928261099c57600085556109e3565b82601f106109b557805160ff19168380011785556109e3565b828001600101855582156109e3579182015b828111156109e25782518255916020019190600101906109c7565b5b5090506109f091906109f4565b5090565b5b80821115610a0d5760008160009055506001016109f5565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610a3881610a25565b8114610a4357600080fd5b50565b600081359050610a5581610a2f565b92915050565b600060208284031215610a7157610a70610a1b565b5b6000610a7f84828501610a46565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ac2578082015181840152602081019050610aa7565b83811115610ad1576000848401525b50505050565b6000601f19601f8301169050919050565b6000610af382610a88565b610afd8185610a93565b9350610b0d818560208601610aa4565b610b1681610ad7565b840191505092915050565b610b2a81610a25565b82525050565b60006040820190508181036000830152610b4a8185610ae8565b9050610b596020830184610b21565b9392505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ba282610ad7565b810181811067ffffffffffffffff82111715610bc157610bc0610b6a565b5b80604052505050565b6000610bd4610a11565b9050610be08282610b99565b919050565b600067ffffffffffffffff821115610c0057610bff610b6a565b5b610c0982610ad7565b9050602081019050919050565b82818337600083830152505050565b6000610c38610c3384610be5565b610bca565b905082815260208101848484011115610c5457610c53610b65565b5b610c5f848285610c16565b509392505050565b600082601f830112610c7c57610c7b610b60565b5b8135610c8c848260208601610c25565b91505092915050565b600060208284031215610cab57610caa610a1b565b5b600082013567ffffffffffffffff811115610cc957610cc8610a20565b5b610cd584828501610c67565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d0982610cde565b9050919050565b610d1981610cfe565b82525050565b6000602082019050610d346000830184610d10565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110610d7a57610d79610d3a565b5b50565b6000819050610d8b82610d69565b919050565b6000610d9b82610d7d565b9050919050565b610dab81610d90565b82525050565b6000602082019050610dc66000830184610da2565b92915050565b610dd581610cfe565b8114610de057600080fd5b50565b600081359050610df281610dcc565b92915050565b600060208284031215610e0e57610e0d610a1b565b5b6000610e1c84828501610de3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e6c57607f821691505b602082108103610e7f57610e7e610e25565b5b50919050565b7f5573657273206973206e6f7420696e207768697465206c697374000000000000600082015250565b6000610ebb601a83610a93565b9150610ec682610e85565b602082019050919050565b60006020820190508181036000830152610eea81610eae565b9050919050565b60006020820190508181036000830152610f0b8184610ae8565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f4d82610a25565b9150610f5883610a25565b925082821015610f6b57610f6a610f13565b5b828203905092915050565b6000602082019050610f8b6000830184610b21565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610fc7602083610a93565b9150610fd282610f91565b602082019050919050565b60006020820190508181036000830152610ff681610fba565b9050919050565b7f546865207573657273206861766520616c726561647920766f74656400000000600082015250565b6000611033601c83610a93565b915061103e82610ffd565b602082019050919050565b6000602082019050818103600083015261106281611026565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006110a382610a25565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110d5576110d4610f13565b5b600182019050919050565b60006040820190506110f56000830185610d10565b6111026020830184610b21565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611165602683610a93565b915061117082611109565b604082019050919050565b6000602082019050818103600083015261119481611158565b905091905056fe5468652070726f706f73616c206372756e6368696e672073657373696f6e206861736e27742073746172746564207965742c20706c6561736520646f6e277420626520696e20612068757272792021a2646970667358221220429f4a680ec54ccb75fdac06c69d0ef5d288bc698863a0bc07cd32ca04163d8964736f6c634300080d0033";

export class Users__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Users> {
    return super.deploy(overrides || {}) as Promise<Users>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Users {
    return super.attach(address) as Users;
  }
  connect(signer: Signer): Users__factory {
    return super.connect(signer) as Users__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsersInterface {
    return new utils.Interface(_abi) as UsersInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Users {
    return new Contract(address, _abi, signerOrProvider) as Users;
  }
}
